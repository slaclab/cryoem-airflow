---

apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: www 
  annotations:
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30s"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "20s"
    nginx.ingress.kubernetes.io/client-max-body-size: "50m"
    nginx.ingress.kubernetes.io/proxy-body-size: "50m"
    ingress.kubernetes.io/whitelist-source-range: 134.79.120.208/30
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: basic-auth
    nginx.ingress.kubernetes.io/auth-realm: "Authentication Required - foo"
spec:
  rules:
    - host: ${airflow_url}
      http:
        paths:
        - path: /
          backend:
            serviceName: webserver
            servicePort: 8080


---
apiVersion: v1
kind: Service
metadata:
  name: webserver
  labels:
    name: webserver
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    name: webserver

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webserver
spec:
  replicas: 1
  selector:
    matchLabels:
      name: webserver
  minReadySeconds: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: webserver
    spec:
      nodeSelector:
$(list=(${webserver__nodeSelectors// / }); for k in "${!list[@]}"; do kv=(${list[k]//\=/ }); echo "        ${kv[0]}: ${kv[1]}"; done)
      containers:
      - name: webserver
        image: ${airflow_image}:${webserver__tag}
        imagePullPolicy: Always
        ports:
          - containerPort: 8080
        #livenessProbe:
        #  httpGet:
        #    path: /admin
        #    port: 8080
        #  initialDelaySeconds: 2 
        #  periodSeconds: 10
        #readinessProbe:
        #  httpGet:
        #    path: /admin
        #    port: 8080
        #  initialDelaySeconds: 2 
        #  periodSeconds: 10
        env:
          - name: JUPYTERHUB_USER
            value: "${airflow_user}"
          - name: EXTERNAL_UID
            value: "${airflow_uid}"
          - name: EXTERNAL_GROUPS
            value: "${airflow_external_groups}"
          - name: AIRFLOW_MODE
            value: webserver
          - name: FERNET_KEY
            value: "46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho="

        volumeMounts:
          - name: airflow-dags
            mountPath: /usr/local/airflow/dags
          - name: airflow-plugins
            mountPath: /usr/local/airflow/plugins
          - name: airflow-logs
            mountPath: /usr/local/airflow/logs
          #- name: ssh-key
          #  mountPath: /usr/local/airflow/.ssh/
      volumes:
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: ${namespace}--dags--${environment}
        - name: airflow-plugins
          persistentVolumeClaim:
            claimName: ${namespace}--plugins--${environment}
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: ${namespace}--logs--${environment}
        #- name: ssh-key
        #  secret:
        #    secretName: ssh-key
        #    items:
        #      - key: ssh_key
        #        path: ssh_key
