
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    name: postgres
spec:
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    role: postgres


---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: "postgres"
  updateStrategy:
    type: RollingUpdate
  replicas: 1 
  selector:
    matchLabels:
      role: postgres
  template:
    metadata:
      labels:
        role: postgres
        environment: ${environment}
    spec:
      terminationGracePeriodSeconds: 60
      nodeSelector:
$(list=(${database__nodeSelectors// / }); for k in "${!list[@]}"; do kv=(${list[k]//\=/ }); echo "        ${kv[0]}: ${kv[1]}"; done)
      securityContext:
        fsGroup: 26
        #sysctls:
        #  - name: kernel.shmmax
        #    value: "272629760"
      containers:
        - name: postgres
          image: crunchydata/crunchy-postgres:${database_tag}
          env:
          - name: PG_MODE
            value: primary
          - name: PG_ROOT_PASSWORD
            value: ${database_root_password}
          - name: PG_PRIMARY_HOST
            value: postgres-primary
          - name: PG_REPLICA_HOST
            value: postgres-replica
          - name: PG_PRIMARY_PORT
            value: "5432"
          - name: PG_PRIMARY_USER
            value: ${database_primary_user}
          - name: PG_PRIMARY_PASSWORD
            value: ${database_primary_password}
          - name: PG_USER
            value: ${database_user}
          - name: PG_PASSWORD
            value: ${database_password}
          - name: PG_DATABASE
            value: ${database_dbname}
          #  - name: MONGO_INITDB_ROOT_PASSWORD
          #    valueFrom:
          #      secretKeyRef:
          #        name: mongodb
          #        key: password
          ports:
            - containerPort: 5432
          #livenessProbe:
          #  initialDelaySeconds: 5
          #  exec:
          #    command:
          #      - " PGPASSWORD=\$PG_PASSWORD "
          #      - " psql "
          #      - " -h \$(hostname)"
          #      - " -U \$PG_USER"
          #      - "\$PG_DATABASE"
          #      - ' -c "SELECT 1;"'
          #readinessProbe:
          #  initialDelaySeconds: 5
          #  exec:
          #    command:
          #      - " PGPASSWORD=\$PG_PASSWORD "
          #      - " psql "
          #      - " -h \$(hostname)"
          #      - " -U \$PG_USER"
          #      - "\$PG_DATABASE"
          #      - ' -c "SELECT 1;"'
          volumeMounts:
            - name: postgres-data
              mountPath: /pgdata
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: ${namespace}--postgres--${environment}
        resources:
          requests:
            storage: 20Gi

