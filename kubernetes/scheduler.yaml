apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheduler
spec:
  replicas: 1
  selector:
    matchLabels:
      name: scheduler
  minReadySeconds: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  template:
    metadata:
      labels:
        name: scheduler
    spec:
      nodeSelector:
$(list=(${scheduler__nodeSelectors// / }); for k in "${!list[@]}"; do kv=(${list[k]//\=/ }); echo "        ${kv[0]}: ${kv[1]}"; done)
      containers:
      - name: scheduler
        image: ${airflow_image}:${scheduler__tag}
        imagePullPolicy: Always
        #resources:
        #  requests:
        #    cpu: 4
 
        #livenessProbe:
        #  httpGet:
        #    path: /admin
        #    port: 8080
        #  initialDelaySeconds: 2 
        #  periodSeconds: 10
        #readinessProbe:
        #  httpGet:
        #    path: /admin
        #    port: 8080
        #  initialDelaySeconds: 2 
        #  periodSeconds: 10
        env:
          - name: JUPYTERHUB_USER
            value: "${airflow_user}"
          - name: EXTERNAL_UID
            value: "${airflow_uid}"
          - name: EXTERNAL_GROUPS
            value: "${airflow_external_groups}"
          - name: AIRFLOW_MODE
            value: scheduler
          - name: FERNET_KEY
            value: "46BKJoQYlPPOexq0OhDZnIlNepKFf87WFwLbfzqDDho="

        volumeMounts:
          - name: airflow-dags
            mountPath: /usr/local/airflow/dags
          - name: airflow-plugins
            mountPath: /usr/local/airflow/plugins
          - name: airflow-logs
            mountPath: /usr/local/airflow/logs
      volumes:
        - name: airflow-dags
          persistentVolumeClaim:
            claimName: ${namespace}--dags--${environment}
        - name: airflow-plugins
          persistentVolumeClaim:
            claimName: ${namespace}--plugins--${environment}
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: ${namespace}--logs--${environment}
