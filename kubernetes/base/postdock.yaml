---
apiVersion: v1
kind: Service
metadata:
  name: postgres 
  labels:
    role: database
spec:
  clusterIP: None
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    role: postgres

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-0
spec:
  ports:
  - name: postgres
    port: 5432
  selector:
    role: postgres
    statefulset.kubernetes.io/pod-name: postgres-0

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-1
spec:
  ports:
  - name: postgres
    port: 5432
  selector:
    role: postgres
    statefulset.kubernetes.io/pod-name: postgres-1

---

apiVersion: v1
kind: Service
metadata:
  name: postgres-2
spec:
  ports:
  - name: postgres
    port: 5432
  selector:
    role: postgres
    statefulset.kubernetes.io/pod-name: postgres-2
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  labels:
    role: database
spec:
  replicas: 3
  serviceName: "postgres"
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      role: postgres
  template:
    metadata:
      labels:
        role: postgres
    spec:
      containers:
      - name: postgres
        image: postdock/postgres:1.15-postgres11-repmgr40
        livenessProbe:
          exec:
            command: ['bash', '-c', '/usr/local/bin/cluster/healthcheck/is_major_master.sh']
          initialDelaySeconds: 600
          timeoutSeconds: 10
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
        imagePullPolicy: Always
        #resources:
        #  requests:
        #    memory: "32Mi"
        #    cpu: "8"
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: "REPMGR_WAIT_POSTGRES_START_TIMEOUT"
          value: "600"
        - name: "REPLICATION_PRIMARY_HOST"
          value: "postgres-0"
        - name: "PARTNER_NODES"
          #value: "postgres-0.postgres,postgres-1.postgres,postgres-2.postgres"
          value: "postgres-0,postgres-1,postgres-2"
        - name: "NODE_NAME"
          value: "$(MY_POD_NAME)"
        - name: "CLUSTER_NODE_NETWORK_NAME"
          #value: "$(MY_POD_NAME).postgres"
          value: "$(MY_POD_NAME)"
        - name: "CONFIGS"
          value: "wal_keep_segments:250,shared_buffers:300MB,archive_command:'/bin/true'"
        # Work DB
        - name: "POSTGRES_DB"
          valueFrom:
           configMapKeyRef:
              name: postgres
              key: database
        - name: "POSTGRES_USER"
          valueFrom:
            secretKeyRef:
              name: postgres
              key: username
        - name: "POSTGRES_PASSWORD"
          valueFrom:
            secretKeyRef:
             name: postgres
             key: password
        # Cluster configs
        - name: "CLUSTER_NAME"
          valueFrom:
            configMapKeyRef:
             name: postgres
             key: cluster-name
        - name: "REPLICATION_DB"
          valueFrom:
            configMapKeyRef:
              name: postgres
              key: replication-db
        - name: "REPLICATION_USER"
          valueFrom:
            secretKeyRef:
              name: postgres
              key: replication-user
        - name: "REPLICATION_PASSWORD"
          valueFrom:
            secretKeyRef:
              name: postgres
              key: replication-password
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: db-data
          mountPath: /var/lib/postgresql/data
  volumeClaimTemplates:
  - metadata:
      name: db-data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: cryoem-daq-dev--postgres
      resources:
        requests:
          storage: 100Gi

