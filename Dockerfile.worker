FROM nvidia/cuda:11.4.1-devel-ubuntu18.04 AS builder
#COPY --from=relion /opt/relion /opt/relion 
#ENV PATH=/opt/relion/bin/:${PATH}
#ENV LD_LIBRARY_PATH=/opt/relion/lib:${LD_LIBRARY_PATH}
#ARG MOTIONCOR2_VERSION=1.4.4
#ENV MOTIONCOR2_VERSION=${MOTIONCOR2_VERSION}
#COPY --from=relion /usr/local/bin /usr/local/bin
#RUN ln -sf /usr/local/bin/MotionCor2_${MOTIONCOR2_VERSION}-Cuda113 /usr/local/bin/MotionCor2
#ENV RELION_MOTIONCOR2_EXECUTABLE=/usr/local/bin/MotionCor2
#ENV RELION_CTFFIND_EXECUTABLE=/usr/local/bin/ctffind

# Never prompt the user for choices on installation/configuration of packages
ENV DEBIAN_FRONTEND noninteractive
ENV TERM linux

# airflow
ARG AIRFLOW_VERSION=1.10.15
ENV AIRFLOW_VERSION=${AIRFLOW_VERSION}

ARG AIRFLOW_USER_HOME=/usr/local/airflow
ENV AIRFLOW_HOME=${AIRFLOW_USER_HOME}

# Define en_US.
ENV LANGUAGE en_US.UTF-8
ENV LANG en_US.UTF-8
ENV LC_ALL en_US.UTF-8
ENV LC_CTYPE en_US.UTF-8
ENV LC_MESSAGES en_US.UTF-8

ARG ARCH="haswell"
ARG RELION_VERSION="ver4.0"
ENV RELION_VERSION=${RELION_VERSION}
ARG EMAN2_VERSION=master
ENV EMAN2_VERSION=${EMAN2_VERSION}
ARG MINICONDA3_VERSION=4.9.2
ENV MINICONDA3_VERSION=$MINICONDA3_VERSION

# python3-pip \
RUN set -ex \
    && buildDeps=' \
        gcc-7 cmake build-essential autoconf automake \
        git \
        freetds-dev \
        libkrb5-dev libsasl2-dev libssl-dev \
        libffi-dev \
        libpq-dev \
        libmariadbclient-dev python3-dev \
        libfftw3-dev \
        libtiff5-dev \
        libopenmpi-dev \
        libx11-dev libglu1-mesa-dev freeglut3-dev mesa-common-dev libxext-dev libxfixes-dev libxcursor-dev libxinerama-dev libfreetype6-dev \
        libfreetype6-dev \
        apt-utils \
    ' \
    && apt-get update -yqq \
    && apt-get upgrade -yqq \
    && apt-get install -yqq --no-install-recommends \
        $buildDeps \
        freetds-bin \
        x11-utils \
        gawk \
        curl \
        acl \
        rsync \
        netcat \
        parallel \
        locales \
        imagemagick \
        libtool flex bison \
        libmariadbclient18 \
        openssh-client \
        gnuplot unzip ghostscript evince csh \
        openmpi-bin \
        libjpeg62 \
        python3-distutils \
    && sed -i 's/^# en_US.UTF-8 UTF-8$/en_US.UTF-8 UTF-8/g' /etc/locale.gen \
    && locale-gen \
    && update-locale LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 \
    \ 
    && cd /tmp/ \
    && curl https://repo.anaconda.com/miniconda/Miniconda3-py37_${MINICONDA3_VERSION}-Linux-x86_64.sh > /tmp/miniconda.sh \
    && bash /tmp/miniconda.sh -b -f -p /usr/ \
    && conda config --set auto_update_conda False \
    && conda install -c anaconda werkzeug==0.16.1 \
    && rm /tmp/miniconda.sh \
    \
    && useradd -m -s /bin/bash -d ${AIRFLOW_USER_HOME} airflow \
    && pip install -U pip setuptools wheel \
    && pip install pytz \
        mysqlclient \
        argcomplete \
        pyOpenSSL \
        ndg-httpsclient \
        pyasn1 \
        sqlalchemy==1.3.23 \
        Flask-SQLAlchemy==2.4.4 \
        apache-airflow[crypto,celery,postgres,hive,jdbc,mysql,ssh]==${AIRFLOW_VERSION} \
        apache-airflow-upgrade-check \
        apache-airflow-backport-providers-docker \
        'redis==3.2' \
        statsd \
        influxdb \
        slackclient==1.3.2 \
        airflow_multi_dagrun \
        paramiko \
        sshtunnel \
    && rm -rf /root/.cache \
    \
    && TMPDIR=`mktemp -d -t` && cd ${TMPDIR} \
    && git clone https://github.com/3dem/relion.git \
    && cd ${TMPDIR}/relion \
    && git checkout ${RELION_VERSION} \
    && sed -i 's/MPI_DOUBLE_COMPLEX/MPI_C_DOUBLE_COMPLEX/g' src/macros.h \
    && mkdir build && cd build \
    && CFLAGS="-march=$ARCH" CXXFLAGS="-march=$ARCH" \
      cmake \
        -DCUDA=ON -DCudaTexture=ON -DCUDA_ARCH=35 \
        -DGUI=OFF \
        -DMPI_C_COMPILER=/usr/bin/mpicc -DMPI_CXX_COMPILER=/usr/bin/mpicxx \
      .. \
    && make -j16 && make install \
    && cd /tmp && rm -rf ${TMPDIR} /root/.cache \
    \
    && conda install eman-deps-dev=22.1 -c cryoem -c defaults -c conda-forge \
    && cd /tmp/ \
    && git clone -b ${EMAN2_VERSION} https://github.com/cryoem/eman2.git \
    && mkdir /tmp/eman2/build && cd /tmp/eman2/build \
    && cmake -prefix=/usr -DENABLE_OPTIMIZE_MACHINE=ON -DCMAKE_INSTALL_RPATH_USE_LINK_PATH=ON ../ \
    && make -j 16 \
    && make install \
    && cd /tmp && rm -rf /tmp/eman2 /root/.cache \
    \
    && apt-get purge --auto-remove -yqq $buildDeps \
    && apt-get autoremove -yqq --purge \
    && apt-get clean \
    && rm -rf \
        /var/lib/apt/lists/* \
        /tmp/* \
        /var/tmp/* \
        /usr/share/man \
        /usr/share/doc \
        /usr/share/doc-base

 
###
# relion/ctffind/motioncor2
###
#FROM slaclab/relion:ver4.0-haswell AS relion
COPY --from=slaclab/relion:ver4.0-haswell /opt/relion /opt/relion 
ENV PATH=/opt/relion/bin/:${PATH}
ENV LD_LIBRARY_PATH=/opt/relion/lib:${LD_LIBRARY_PATH}
ARG MOTIONCOR2_VERSION=1.4.4
ENV MOTIONCOR2_VERSION=${MOTIONCOR2_VERSION}
COPY --from=slaclab/relion:ver4.0-haswell /usr/local/bin /usr/local/bin
RUN ln -sf /usr/local/bin/MotionCor2_${MOTIONCOR2_VERSION}-Cuda113 /usr/local/bin/MotionCor2
ENV RELION_MOTIONCOR2_EXECUTABLE=/usr/local/bin/MotionCor2
ENV RELION_CTFFIND_EXECUTABLE=/usr/local/bin/ctffind

###
# imod
###
#    && ln -sf /usr/bin/python3 /usr/bin/python
ARG IMOD_VERSION=4.11.12
ENV IMOD_VERSION=${IMOD_VERSION}
RUN TMPFILE=/tmp/imod_${IMOD_VERSION}_RHEL7-64_CUDA10.1.sh \
    && curl "https://bio3d.colorado.edu/imod/AMD64-RHEL5/imod_4.11.12_RHEL7-64_CUDA10.1.sh" > ${TMPFILE} \
    && sh ${TMPFILE} -yes || true \
    && rm -f ${TMPFILE} 
ENV IMOD_JAVADIR=/usr/local/java IMOD_CALIB_DIR=/usr/local/ImodCalib IMOD_PLUGIN_DIR=/usr/local/IMOD/lib/imodplug IMOD_QTLIBDIR=/usr/local/IMOD/qtlib IMOD_DIR=/usr/local/IMOD
ENV PATH=${PATH}:/usr/local/IMOD/bin

COPY module /usr/local/bin/
COPY entrypoint.sh /entrypoint.sh
COPY config/airflow.cfg ${AIRFLOW_USER_HOME}/airflow.cfg

ARG AIRFLOW_UID=15693
ARG AIRFLOW_GID=3591
RUN groupmod -g ${AIRFLOW_GID} airflow \
      && echo "AIRFLOW_USER_HOME=${AIRFLOW_USER_HOME}" \
      && usermod -d ${AIRFLOW_USER_HOME} --gid ${AIRFLOW_GID} --uid ${AIRFLOW_UID} airflow
RUN chown -R airflow: ${AIRFLOW_USER_HOME}

EXPOSE 8080 5555 8793

USER airflow
WORKDIR ${AIRFLOW_USER_HOME}
ENTRYPOINT ["/entrypoint.sh"]

